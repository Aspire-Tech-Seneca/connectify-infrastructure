name: "Terraform - dev"
# https://gaunacode.com/deploying-terraform-at-scale-with-github-actions
on:
  push:
    branches:
    - dev
    paths:
    - management/**

  pull_request:
    branches:
    - dev
    paths: 
    - management/** 

permissions:
  contents: write
  pull-requests: write 

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: dev
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CLIENT_ID:  ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SECRET:  ${{ secrets.AZURE_SECRET }}
      AZURE_TENANT:  ${{ secrets.AZURE_TENANT }}
    
    strategy:
      matrix:
        dir: ["./management"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: true

      - name: Terraform fmt
        id: fmt
        run: terraform fmt 
        continue-on-error: true
        working-directory: ${{ matrix.dir }}


      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ matrix.dir }}

           
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ matrix.dir }}

      - name: Create SSH Key
        working-directory: ./dev/compute
        run: |
         echo "${{ secrets.SSH_PUB_KP }}" > ~/.ssh/connectify_kp.pub       
         sudo chmod 600 ~/.ssh/connectify_kp.pub 
         

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color -out tf.plan
        working-directory: ${{ matrix.dir }} # Use your environment folder
        continue-on-error: true

      - name: Get result
        run: echo "${{ steps.validate.outputs.stdout }}"
      
      - name: Terraform Show
        id: show
        run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
        working-directory: ${{ matrix.dir }} # Use your environment folder
          
      - name: Terraform Apply
        run: terraform apply -input=false tf.plan
        working-directory: ${{ matrix.dir }} # Use your environment folder
        shell: bash

    #   - name: Notify Ansible Workflow
    #     if: success()
    #     uses: peter-evans/repository-dispatch@v2
    #     with:
    #       token: ${{ secrets.PAT_TOKEN }}
    #       repository: who1-dev/acs-project-ansible
    #       event-type: terraform_complete
    #       client-payload: '{"environment": "prod"}'